//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a T4 template.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------


using System.Windows.Data;

namespace WpfExtensions.Xaml.Markup;

public partial class SwitchExtension
{
    /*
     * Have to list these constructor overloads here,
     * because the stupid xaml does not support the "params" keyword.
     * e.g.: ctor(params CaseExtension[] converters) cannot be used.
     */

    private SwitchExtension(Binding to)
        : this()
    {
        To = to;
    }

    public SwitchExtension(Binding to, CaseExtension item0, CaseExtension item1)
        : this(to)
    {
        Cases.Add(item0);
        Cases.Add(item1);
    }

    public SwitchExtension(Binding to, CaseExtension item0, CaseExtension item1, CaseExtension item2)
        : this(to)
    {
        Cases.Add(item0);
        Cases.Add(item1);
        Cases.Add(item2);
    }

    public SwitchExtension(Binding to, CaseExtension item0, CaseExtension item1, CaseExtension item2, CaseExtension item3)
        : this(to)
    {
        Cases.Add(item0);
        Cases.Add(item1);
        Cases.Add(item2);
        Cases.Add(item3);
    }

    public SwitchExtension(Binding to, CaseExtension item0, CaseExtension item1, CaseExtension item2, CaseExtension item3, CaseExtension item4)
        : this(to)
    {
        Cases.Add(item0);
        Cases.Add(item1);
        Cases.Add(item2);
        Cases.Add(item3);
        Cases.Add(item4);
    }

    public SwitchExtension(Binding to, CaseExtension item0, CaseExtension item1, CaseExtension item2, CaseExtension item3, CaseExtension item4, CaseExtension item5)
        : this(to)
    {
        Cases.Add(item0);
        Cases.Add(item1);
        Cases.Add(item2);
        Cases.Add(item3);
        Cases.Add(item4);
        Cases.Add(item5);
    }

    public SwitchExtension(Binding to, CaseExtension item0, CaseExtension item1, CaseExtension item2, CaseExtension item3, CaseExtension item4, CaseExtension item5, CaseExtension item6)
        : this(to)
    {
        Cases.Add(item0);
        Cases.Add(item1);
        Cases.Add(item2);
        Cases.Add(item3);
        Cases.Add(item4);
        Cases.Add(item5);
        Cases.Add(item6);
    }

    public SwitchExtension(Binding to, CaseExtension item0, CaseExtension item1, CaseExtension item2, CaseExtension item3, CaseExtension item4, CaseExtension item5, CaseExtension item6, CaseExtension item7)
        : this(to)
    {
        Cases.Add(item0);
        Cases.Add(item1);
        Cases.Add(item2);
        Cases.Add(item3);
        Cases.Add(item4);
        Cases.Add(item5);
        Cases.Add(item6);
        Cases.Add(item7);
    }

    public SwitchExtension(Binding to, CaseExtension item0, CaseExtension item1, CaseExtension item2, CaseExtension item3, CaseExtension item4, CaseExtension item5, CaseExtension item6, CaseExtension item7, CaseExtension item8)
        : this(to)
    {
        Cases.Add(item0);
        Cases.Add(item1);
        Cases.Add(item2);
        Cases.Add(item3);
        Cases.Add(item4);
        Cases.Add(item5);
        Cases.Add(item6);
        Cases.Add(item7);
        Cases.Add(item8);
    }

    public SwitchExtension(Binding to, CaseExtension item0, CaseExtension item1, CaseExtension item2, CaseExtension item3, CaseExtension item4, CaseExtension item5, CaseExtension item6, CaseExtension item7, CaseExtension item8, CaseExtension item9)
        : this(to)
    {
        Cases.Add(item0);
        Cases.Add(item1);
        Cases.Add(item2);
        Cases.Add(item3);
        Cases.Add(item4);
        Cases.Add(item5);
        Cases.Add(item6);
        Cases.Add(item7);
        Cases.Add(item8);
        Cases.Add(item9);
    }

    public SwitchExtension(Binding to, CaseExtension item0, CaseExtension item1, CaseExtension item2, CaseExtension item3, CaseExtension item4, CaseExtension item5, CaseExtension item6, CaseExtension item7, CaseExtension item8, CaseExtension item9, CaseExtension item10)
        : this(to)
    {
        Cases.Add(item0);
        Cases.Add(item1);
        Cases.Add(item2);
        Cases.Add(item3);
        Cases.Add(item4);
        Cases.Add(item5);
        Cases.Add(item6);
        Cases.Add(item7);
        Cases.Add(item8);
        Cases.Add(item9);
        Cases.Add(item10);
    }

    public SwitchExtension(Binding to, CaseExtension item0, CaseExtension item1, CaseExtension item2, CaseExtension item3, CaseExtension item4, CaseExtension item5, CaseExtension item6, CaseExtension item7, CaseExtension item8, CaseExtension item9, CaseExtension item10, CaseExtension item11)
        : this(to)
    {
        Cases.Add(item0);
        Cases.Add(item1);
        Cases.Add(item2);
        Cases.Add(item3);
        Cases.Add(item4);
        Cases.Add(item5);
        Cases.Add(item6);
        Cases.Add(item7);
        Cases.Add(item8);
        Cases.Add(item9);
        Cases.Add(item10);
        Cases.Add(item11);
    }

    public SwitchExtension(Binding to, CaseExtension item0, CaseExtension item1, CaseExtension item2, CaseExtension item3, CaseExtension item4, CaseExtension item5, CaseExtension item6, CaseExtension item7, CaseExtension item8, CaseExtension item9, CaseExtension item10, CaseExtension item11, CaseExtension item12)
        : this(to)
    {
        Cases.Add(item0);
        Cases.Add(item1);
        Cases.Add(item2);
        Cases.Add(item3);
        Cases.Add(item4);
        Cases.Add(item5);
        Cases.Add(item6);
        Cases.Add(item7);
        Cases.Add(item8);
        Cases.Add(item9);
        Cases.Add(item10);
        Cases.Add(item11);
        Cases.Add(item12);
    }

    public SwitchExtension(Binding to, CaseExtension item0, CaseExtension item1, CaseExtension item2, CaseExtension item3, CaseExtension item4, CaseExtension item5, CaseExtension item6, CaseExtension item7, CaseExtension item8, CaseExtension item9, CaseExtension item10, CaseExtension item11, CaseExtension item12, CaseExtension item13)
        : this(to)
    {
        Cases.Add(item0);
        Cases.Add(item1);
        Cases.Add(item2);
        Cases.Add(item3);
        Cases.Add(item4);
        Cases.Add(item5);
        Cases.Add(item6);
        Cases.Add(item7);
        Cases.Add(item8);
        Cases.Add(item9);
        Cases.Add(item10);
        Cases.Add(item11);
        Cases.Add(item12);
        Cases.Add(item13);
    }

    public SwitchExtension(Binding to, CaseExtension item0, CaseExtension item1, CaseExtension item2, CaseExtension item3, CaseExtension item4, CaseExtension item5, CaseExtension item6, CaseExtension item7, CaseExtension item8, CaseExtension item9, CaseExtension item10, CaseExtension item11, CaseExtension item12, CaseExtension item13, CaseExtension item14)
        : this(to)
    {
        Cases.Add(item0);
        Cases.Add(item1);
        Cases.Add(item2);
        Cases.Add(item3);
        Cases.Add(item4);
        Cases.Add(item5);
        Cases.Add(item6);
        Cases.Add(item7);
        Cases.Add(item8);
        Cases.Add(item9);
        Cases.Add(item10);
        Cases.Add(item11);
        Cases.Add(item12);
        Cases.Add(item13);
        Cases.Add(item14);
    }

    public SwitchExtension(Binding to, CaseExtension item0, CaseExtension item1, CaseExtension item2, CaseExtension item3, CaseExtension item4, CaseExtension item5, CaseExtension item6, CaseExtension item7, CaseExtension item8, CaseExtension item9, CaseExtension item10, CaseExtension item11, CaseExtension item12, CaseExtension item13, CaseExtension item14, CaseExtension item15)
        : this(to)
    {
        Cases.Add(item0);
        Cases.Add(item1);
        Cases.Add(item2);
        Cases.Add(item3);
        Cases.Add(item4);
        Cases.Add(item5);
        Cases.Add(item6);
        Cases.Add(item7);
        Cases.Add(item8);
        Cases.Add(item9);
        Cases.Add(item10);
        Cases.Add(item11);
        Cases.Add(item12);
        Cases.Add(item13);
        Cases.Add(item14);
        Cases.Add(item15);
    }

}
